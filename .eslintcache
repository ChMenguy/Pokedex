[{"/Users/christophe/Documents/Dev-Web/React/pokedex/src/index.js":"1","/Users/christophe/Documents/Dev-Web/React/pokedex/src/header.jsx":"2","/Users/christophe/Documents/Dev-Web/React/pokedex/src/PokemonsCards.jsx":"3","/Users/christophe/Documents/Dev-Web/React/pokedex/src/FetchPokemon.jsx":"4","/Users/christophe/Documents/Dev-Web/React/pokedex/src/PokemonList.jsx":"5","/Users/christophe/Documents/Dev-Web/React/pokedex/src/Home.jsx":"6","/Users/christophe/Documents/Dev-Web/React/pokedex/src/PokemonDetails.jsx":"7"},{"size":589,"mtime":1610650819214,"results":"8","hashOfConfig":"9"},{"size":225,"mtime":1611077584012,"results":"10","hashOfConfig":"9"},{"size":370,"mtime":1610562038455,"results":"11","hashOfConfig":"9"},{"size":991,"mtime":1610635422120,"results":"12","hashOfConfig":"9"},{"size":2194,"mtime":1610722417278,"results":"13","hashOfConfig":"9"},{"size":180,"mtime":1610648588146,"results":"14","hashOfConfig":"9"},{"size":1284,"mtime":1611080531785,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"16xfwe4",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/christophe/Documents/Dev-Web/React/pokedex/src/index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css'\nimport Home from './Home'\nimport PokemonDetails from './PokemonDetails'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst NoMatchRoute = () => <div>404 Page</div>;\n\nReactDOM.render(\n  <Router>\n    <Switch>\n       <Route path=\"/\" exact component = {Home} />\n       <Route path=\"/:PokemonId\" exact component={PokemonDetails}/>\n       <Route component={NoMatchRoute} />     \n    </Switch>  \n  </Router>,\n  document.getElementById('root')\n);\n\n",["35","36"],"/Users/christophe/Documents/Dev-Web/React/pokedex/src/header.jsx",[],"/Users/christophe/Documents/Dev-Web/React/pokedex/src/PokemonsCards.jsx",[],"/Users/christophe/Documents/Dev-Web/React/pokedex/src/FetchPokemon.jsx",["37"],"import React, { useEffect, useState } from 'react';\n\nfunction useFetchPokemon(){\n    const [data,fetchPokemon] = useState({\n      nameFr : [],\n    })\n  \n    useEffect(()=>{async function fetchAllPokemon(){\n      const pokeData = []\n      for (let index = 1; index < 800; index++) {\n        const reqName = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${index}`);\n        const resName = await reqName.json();\n        const nameArray = resName.names;\n        let nameFr = ''\n        nameArray.forEach(name => {\n          if(name.language.name==='fr'){\n            nameFr = name.name\n          }\n        });\n        pokeData.push({\n          id : resName.id,\n          nameFr: nameFr,\n          imageFront : `https://pokeres.bastionbot.org/images/pokemon/${resName.id}.png`\n        })\n      fetchPokemon({\n                nameFr : pokeData\n            }) \n      }\n    }fetchAllPokemon()    \n    },[])\n  \n    return [\n      data.nameFr,\n    ]\n  \n  }\n\n  export default useFetchPokemon;","/Users/christophe/Documents/Dev-Web/React/pokedex/src/PokemonList.jsx",["38"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Card from './PokemonsCards'\nimport useFetchPokemon from './FetchPokemon'\nimport { Link } from 'react-router-dom';\n\nfunction TriPokemon({data}){\n\n  const [search,handleSearch] = useState('')\n  const [searchResult,setSearchResult] = useState({resultData : [],\n                                                  resultVerif : false})\n  const Search = (e) =>{\n    handleSearch(e.target.value)\n  }\n\n  useEffect(()=>{\n  \n      let results = data.filter(data=>data.nameFr.toLowerCase().includes(search.toLowerCase()))\n      if(search===''){\n        setSearchResult({resultVerif : false})\n      } else {\n        setSearchResult ({resultData : results,\n                        resultVerif: true})\n      }\n\n  },[search])\n\n  return(<> <div className=\"search\">\n              <div className=\"searchBar container input-group mt-3\">\n                <input type=\"search\" value = {search} onChange={Search} placeholder=\"Entrez le nom d'un pokemon\" aria-describedby=\"button-addon1\" class=\"form-control border-0 bg-light\"></input>\n                <div className=\"input-group-append\">\n                <button id=\"button-addon1\" type=\"submit\" className=\"btn btn-link text-primary\"><i className=\"fa fa-search\"></i></button>\n              </div>\n            </div>\n            \n          \n          {(searchResult.resultVerif)?\n            <div className=\"pokemons container\">\n            {searchResult.resultData.map(data=>(\n            <Link className='link' to = {`/${data.id}`} key={data.nameFr}>\n              <Card imageFront={data.imageFront} name={data.nameFr}/></Link>  \n            ))}            \n          </div> \n          : <div className=\"pokemons container\">\n            {data.map(data=>(\n            <Link className='link' to = {`/${data.id}`} key={data.nameFr}>\n              <Card imageFront={data.imageFront} name={data.nameFr}/>\n            </Link>\n          ))    \n              .slice(0,8)}\n            </div>}\n        </div>\n        </>\n  )\n}\n\nfunction PokemonList (){\n  const [data]= useFetchPokemon()\n  return(\n  <div className=\"container\">\n    <TriPokemon data={data}/>\n  </div>\n  )\n}\n\nexport default PokemonList","/Users/christophe/Documents/Dev-Web/React/pokedex/src/Home.jsx",[],"/Users/christophe/Documents/Dev-Web/React/pokedex/src/PokemonDetails.jsx",["39","40","41","42"],{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":17},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"51","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":26,"column":5,"nodeType":"54","endLine":26,"endColumn":13,"suggestions":"55"},{"ruleId":"43","severity":1,"message":"56","line":6,"column":12,"nodeType":"45","messageId":"46","endLine":6,"endColumn":23},{"ruleId":"43","severity":1,"message":"57","line":6,"column":25,"nodeType":"45","messageId":"46","endLine":6,"endColumn":42},{"ruleId":"58","severity":1,"message":"59","line":27,"column":30,"nodeType":"60","messageId":"61","endLine":27,"endColumn":32},{"ruleId":"43","severity":1,"message":"56","line":46,"column":12,"nodeType":"45","messageId":"46","endLine":46,"endColumn":23},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["64"],"'description' is assigned a value but never used.","'handleDescription' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [data, search]",{"range":"67","text":"68"},[779,787],"[data, search]"]